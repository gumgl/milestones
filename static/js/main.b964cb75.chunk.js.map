{"version":3,"sources":["Sequences.js","App.js","reportWebVitals.js","index.js"],"names":["Generator","f","gf","x","gi","list","c","next","done","value","push","Sequences","id","name","oeis","n","params","Math","pow","format","item","toLocaleString","b","m","nextTerm","term","prev","result","i","length","SequenceOptionsList","props","map","s","SequenceOption","sequence","seqOptions","seqInputChange","type","checked","onChange","href","target","rel","MilestonesList","refDate","units","ms","milestones","refTime","getTime","now","Date","unit","future","tagged","date","label","concat","sort","a","computeMilestones","milestone","title","toISOString","split","encodeURIComponent","App","useState","setRefDate","powers10","n10x","repdigit","powers2","factorial","lookandsay","setSeqOptions","className","e","d","isNaN","console","error","event","toDateString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b964cb75.chunk.js","sourcesContent":["export const Generator =\n{\n  map: (f,gf) => function* (...args)\n    {\n      for (const x of gf (...args))\n        yield f (x)\n    },\n  filter: (f,gf) => function* (...args)\n    {\n      for (const x of gf (...args))\n        if (f (x))\n          yield x\n    },\n  take: function(n, gi) {\n    let list=[];\n    for (let i=0, c=gi.next();\n      !c.done && i<n;\n      i++, c=gi.next())\n      list[i] = c.value;\n    return list;\n  },\n  takeWhile: function(f, gi) {\n    let list = [];\n    for (let c=gi.next();\n      !c.done && f(c.value);\n      c=gi.next())\n      list.push(c.value);\n    return list;\n  }\n};\n\nexport const Sequences = [\n  {\n    id: \"powers10\",\n    name: \"10^x\",\n    oeis: \"A011557\",\n    gf: function*() {\n      for (let n = 1; ; n++)\n        yield {\n          params: [n],\n          value: Math.pow(10,n)\n        };\n    },\n    format: (item) => item.value.toLocaleString(),//\"10^\" + item.params[0]\n  },\n  {\n    id: \"powers2\",\n    name: \"2^n\",\n    oeis: \"A000079\",\n    gf: function*() {\n      for (let n = 1; ; n++)\n        yield {\n          params: [n],\n          value: Math.pow(2,n)\n        };\n    },\n    format: (item) => \"2^\" + item.params[0],\n  },\n  {\n    id: \"repdigit\",\n    name: \"[n]^x (repeated digit)\",\n    oeis: \"A010785\",\n    gf: function*() {\n      for (let b=1; ; b=b*10+1)\n        for (let n=1; n<=9; n++)\n          yield {\n            params: [b, n],\n            value: b*n\n          };\n    },\n    format: (item) => item.value.toLocaleString(),\n  },\n  {\n    id:\"n10x\",\n    name: \"n * 10^x (for small n)\",\n    oeis: \"A037124\",\n    gf: function*() {\n      for (let x=1; ; x++)\n        for (let n=2; n<=9; n++)\n          yield {\n            params: [n, x],\n            value: n * Math.pow(10, x)\n          };\n    },\n    format: (item) => item.value.toLocaleString(),\n  },\n  {\n    id: \"factorial\",\n    name: \"x! (factorial)\",\n    oeis: \"A005150\",\n    gf: function*() {\n      for (let n = 1, m = 1; ; n++, m *= n)\n        yield {\n          params: [n],\n          value: m\n        };\n    },\n    format: (item) => item.params[0] + \"!\",\n  },\n  {\n    id:\"lookandsay\",\n    name: \"Look-and-say terms\",\n    oeis: \"A005150\",\n    gf: function*() {\n      let nextTerm = (term) => {\n        let result = \"\";\n        for (let i=0, c=0, prev; i < term.length; i++) {\n          if (c === 0 || term[i] !== prev ) {\n            if (c !== 0)\n              result += \"\" + c + prev;\n            prev = term[i];\n            c = 1;\n          } else\n            c++;\n          if (i === term.length - 1)\n            result += \"\" + c + prev;\n        }\n        return result;\n      };\n      for (let term = \"1\"; ; term = nextTerm(term))\n        yield {\n          params: [term],\n          value: term\n        };\n    },\n    format: (item) => item.value,\n  },\n];","import './App.css';\nimport React, {useState} from 'react';\nimport {Generator, Sequences} from './Sequences';\nimport { Button } from '@material-ui/core';\n\nfunction App() {\n  const [refDate, setRefDate] = useState(new Date(1969, 6, 24));\n\n  const [seqOptions, setSeqOptions] = useState({\n    powers10: true,\n    n10x: false,\n    repdigit: false,\n    powers2: false,\n    factorial: false,\n    lookandsay: false\n  });\n\n  const seqInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked :\n                  target.value;\n\n    setSeqOptions({\n      ...seqOptions,\n      [target.name]: value\n    });\n  };\n\n  const refDateInputChange = (e) => {\n    const d = new Date(e.target.value);\n\n    if (!isNaN(d))\n      setRefDate(d);\n    else\n      console.error(\"Incorrect date input: \", e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <form>\n      <label>\n        Date of reference: <br/>\n        <input\n          name=\"refDate\"\n          type=\"date\"\n          value={refDate.toISOString().split('T')[0]}\n          onChange={refDateInputChange} />\n      </label>\n      <SequenceOptionsList\n        seqOptions={seqOptions}\n        seqInputChange={seqInputChange}\n        />\n    </form>\n    <p>Since {refDate.toDateString()}...</p>\n\n    <MilestonesList refDate={refDate} seqOptions={seqOptions} />\n    \n    </div>\n  );\n}\n\nfunction SequenceOptionsList(props) {\n  let list = Sequences.map(s => \n    <li key={s.id}>\n      <SequenceOption\n        sequence={s}\n        seqOptions={props.seqOptions}\n        seqInputChange={props.seqInputChange}\n        />\n    </li>);\n\n  return (\n    <fieldset>\n    <legend>What do you care about?</legend>\n    <ul>{list}</ul>\n    </fieldset>\n  );\n}\n\nfunction SequenceOption(props) {\n  const s = props.sequence;\n  return (\n    <label>\n      <input\n        name={s.id}\n        type=\"checkbox\"\n        checked={props.seqOptions[s.id]}\n        onChange={props.seqInputChange} />\n      {s.name} <a href={\"https://oeis.org/\" + s.oeis} target=\"_blank\" rel=\"noreferrer\">{s.oeis}</a>\n    </label>\n  );\n}\n\nfunction MilestonesList(props) {\n  let list = computeMilestones(props.refDate, props.seqOptions).map((milestone) =>\n    <li key={milestone.date.getTime()+\"-\"+milestone.value}>\n    <span title={milestone.date}>{milestone.date.toISOString().split('T')[0]}</span>: <span title={milestone.value}>{milestone.label}</span> - <a target=\"_blank\" rel=\"noreferrer\" href={\"https://www.wolframalpha.com/input/?i=\"+encodeURIComponent(props.refDate.toISOString().split('T')[0]+\" + \"+milestone.label)}>Verify</a></li>);\n  return <ul>{list}</ul>;\n}\n\nfunction computeMilestones(refDate, seqOptions) {\n  const units = [\n    {ms: 1000, name: \"seconds\"},\n    {ms: 1000*60, name: \"minutes\"},\n    {ms: 1000*60*60, name: \"hours\"},\n    {ms: 1000*60*60*24, name: \"days\"},\n    {ms: 1000*60*60*24*7, name: \"weeks\"},\n    // months TBD\n  ];\n\n  let milestones = [],\n      refTime = refDate.getTime(),\n      now = Date.now();\n\n  for (const unit of units)\n    for (const s of Sequences)\n      if (seqOptions[s.id]) {\n        let future = Generator.filter((item) => refTime + item.value * unit.ms > now - 1000*60*60*24*365, s.gf);\n        let nearFuture = Generator.takeWhile(\n          (item) => refTime + item.value * unit.ms < now + 1000*60*60*24*365*10,\n          future()\n          );\n        let tagged = nearFuture.map((item) => ({\n          date: new Date(refTime + item.value * unit.ms),\n          label: s.format(item) + \" \" + unit.name,\n          value: item.value\n        }));\n        milestones = milestones.concat(tagged);\n      }\n\n  milestones.sort((a,b) => a.date - b.date);\n\n  return milestones;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}